from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram import html
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext

# categories = ["–ê–Ω—ñ–º–µ üç•", "–§—ñ–ª—å–º–∏ üé¨", "–ö–Ω–∏–≥–∏ üìö"]
categories = ["–ê–Ω—ñ–º–µ", "–§—ñ–ª—å–º–∏", "–ö–Ω–∏–≥–∏"]

def get_keyboard(array):
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=cat)] for cat in array],
        resize_keyboard=True
)

def register_handlers(dp):
    
    actions = {
            "–ê–Ω—ñ–º–µ": ["–î–æ–¥–∞—Ç–∏ –∞–Ω—ñ–º–µ", "–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –∞–Ω—ñ–º–µ", "–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ –∞–Ω—ñ–º–µ", "–ù–∞–∑–∞–¥"],
            "–§—ñ–ª—å–º–∏": ["–î–æ–¥–∞—Ç–∏ —Ñ—ñ–ª—å–º", "–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Ñ—ñ–ª—å–º", "–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ñ—ñ–ª—å–º—ñ–≤", "–ù–∞–∑–∞–¥"],
            "–ö–Ω–∏–≥–∏": ["–î–æ–¥–∞—Ç–∏ –∫–Ω–∏–≥—É", "–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –∫–Ω–∏–≥—É", "–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥", "–ù–∞–∑–∞–¥"]
        }
    
    def get_all_actions():
        """–ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –¥—ñ–π –¥–ª—è –≤—Å—ñ—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π (–∫—Ä—ñ–º '–ù–∞–∑–∞–¥')"""
        all_actions = []
        for actions_list in actions.values():
            all_actions.extend([action for action in actions_list if action != "–ù–∞–∑–∞–¥"])
        return all_actions
    
    def get_category_by_action(action_text):
        """–ó–Ω–∞—Ö–æ–¥–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∑–∞ —Ç–µ–∫—Å—Ç–æ–º –¥—ñ—ó"""
        for category, category_actions in actions.items():
            if action_text in category_actions:
                return category
        return None
    
    @dp.message(CommandStart())
    async def command_start_handler(message: Message) -> None:
        """
        This handler receives messages with `/start` command
        """
        user_full_name = message.from_user.full_name if message.from_user else "User"

        keyboard = get_keyboard(categories)
        
        await message.answer(
            f"–ü—Ä–∏–≤—ñ—Ç, {user_full_name}! –Ø Media Tracker Bot. –Ø –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏. –û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:",
            reply_markup=keyboard
        )

    # @dp.message(lambda msg: msg.text in categories)
    # async def category_handler(message: Message) -> None:
        
        # category = message.text if message.text is not None else ""
        # keyboard = get_keyboard(actions.get(category, []))

        # await message.answer(f"–í–∏ –≤–∏–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é: {message.text}. –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é –Ω–∏–∂—á–µ.", reply_markup=keyboard)

    @dp.message(lambda msg: msg.text == "–ù–∞–∑–∞–¥")
    async def back_handler(message: Message, state: FSMContext) -> None:
        """
        Handler for the "–ù–∞–∑–∞–¥" button to return to category selection
        """
        await state.clear()  # –î–æ–¥–∞—î–º–æ –æ—á–∏—â–µ–Ω–Ω—è FSM!
        keyboard = get_keyboard(categories)
        await message.answer("–ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ –≤–∏–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó. –û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:", reply_markup=keyboard)